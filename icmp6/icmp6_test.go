package icmp6

import (
	"bytes"
	"fmt"
	"net"
	"testing"

	"github.com/irai/packet"
)

/**
sudo tcpdump -v -XX -t icmp6
IP6 (hlim 255, next-header ICMPv6 (58) payload length: 160) fe80::7ce8:94ff:fe42:29aa > netfilter: [icmp6 sum ok] ICMP6,
    redirect, length 160, 2001:4479:1e00:8202:42:15ff:fee6:1008 to _gateway
          destination link-address option (2), length 8 (1): cc:32:e5:0e:67:f4
          redirected header option (4), length 112 (14):
            0x0000:  0201 cc32 e50e 67f4 040e 0000 0000 0000
            0x0010:  6001 9003 0040 3a3f 2001 4479 1e00 8201
            0x0020:  0042 caff fe78 0450 2001 4479 1e00 8202
            0x0030:  0042 15ff fee6 1008 8100 74c2 010a 1246
            0x0040:  9e31 ab60 c2a9 0300 0809 0a0b 0c0d 0e0f
            0x0050:  1011 1213 1415 1617 1819 1a1b 1c1d 1e1f
            0x0060:  2021 2223 2425 2627 2829 2a2b 2c2d 2e2f
        0x0000:  0242 ca78 0450 7ee8 9442 29aa 86dd 6000  .B.x.P~..B)...`.
        0x0010:  0000 00a0 3aff fe80 0000 0000 0000 7ce8  ....:.........|.
        0x0020:  94ff fe42 29aa 2001 4479 1e00 8201 0042  ...B)...Dy.....B
        0x0030:  caff fe78 0450 8900 df94 0000 0000 fe80  ...x.P..........
        0x0040:  0000 0000 0000 ce32 e5ff fe0e 67f4 2001  .......2....g...
        0x0050:  4479 1e00 8202 0042 15ff fee6 1008 0201  Dy.....B........
        0x0060:  cc32 e50e 67f4 040e 0000 0000 0000 6001  .2..g.........`.
        0x0070:  9003 0040 3a3f 2001 4479 1e00 8201 0042  ...@:?..Dy.....B
        0x0080:  caff fe78 0450 2001 4479 1e00 8202 0042  ...x.P..Dy.....B
        0x0090:  15ff fee6 1008 8100 74c2 010a 1246 9e31  ........t....F.1
        0x00a0:  ab60 c2a9 0300 0809 0a0b 0c0d 0e0f 1011  .`..............
        0x00b0:  1213 1415 1617 1819 1a1b 1c1d 1e1f 2021  ...............!
        0x00c0:  2223 2425 2627 2829 2a2b 2c2d 2e2f 3031  "#$%&'()*+,-./01
        0x00d0:  3233 3435 3637                           234567
*/
var icmp6Redirect = []byte{
	0x02, 0x42, 0xca, 0x78, 0x04, 0x50, 0x7e, 0xe8, 0x94, 0x42, 0x29, 0xaa, 0x86, 0xdd,
	0x60, 0x00, 0x00, 0x00, 0x00, 0xa0, 0x3a, 0xff, 0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // `.....:.........
	0xce, 0x32, 0xe5, 0xff, 0xfe, 0x0e, 0x67, 0xf4, 0x20, 0x01, 0x44, 0x79, 0x1e, 0x00, 0x82, 0x01, // .2....g...Dy....
	0x00, 0x42, 0xca, 0xff, 0xfe, 0x78, 0x04, 0x50, 0x89, 0x00, 0xbb, 0xf4, 0x00, 0x00, 0x00, 0x00, // .B...x.P........
	0xfe, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xe8, 0x94, 0xff, 0xfe, 0x42, 0x29, 0xaa, // ........|....B).
	0x20, 0x01, 0x44, 0x79, 0x1e, 0x00, 0x82, 0x02, 0x00, 0x42, 0x15, 0xff, 0xfe, 0xe6, 0x10, 0x08, // ..Dy.....B......
	0x02, 0x01, 0x7e, 0xe8, 0x94, 0x42, 0x29, 0xaa, 0x04, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // ..~..B).........
	0x60, 0x01, 0x90, 0x03, 0x00, 0x40, 0x3a, 0x40, 0x20, 0x01, 0x44, 0x79, 0x1e, 0x00, 0x82, 0x01, // `....@:@..Dy....
	0x00, 0x42, 0xca, 0xff, 0xfe, 0x78, 0x04, 0x50, 0x20, 0x01, 0x44, 0x79, 0x1e, 0x00, 0x82, 0x02, // .B...x.P..Dy....
	0x00, 0x42, 0x15, 0xff, 0xfe, 0xe6, 0x10, 0x08, 0x81, 0x00, 0xb9, 0x7e, 0x01, 0x0a, 0x09, 0x3a, // .B.........~...:
	0x5a, 0x28, 0xab, 0x60, 0xc4, 0x02, 0x0a, 0x00, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, // Z(.`............
	0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, // ................
	0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2a, 0x2b, 0x2c, 0x2d, 0x2e, 0x2f, // .!"#$%&'()*+,-./
	0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, // 01234567
}

func Test_ICMP6Redirect(t *testing.T) {
	tc := setupTestHandler()
	defer tc.Close()

	ether := packet.Ether(icmp6Redirect)
	fmt.Println("ether", ether)
	ip6Frame := packet.IP6(ether.Payload())
	fmt.Println("ip6", ip6Frame)
	icmp6Frame := ICMP6(ip6Frame.Payload())
	fmt.Println("icmp6", icmp6Frame)
	redirect := ICMP6Redirect(icmp6Frame)
	if !redirect.IsValid() {
		t.Fatal("invalid len")
	}
	fmt.Println("redirect", redirect)

	targetIP := net.ParseIP("fe80::7ce8:94ff:fe42:29aa")
	targetMAC, _ := net.ParseMAC("7e:e8:94:42:29:aa")
	dstIP := net.ParseIP("2001:4479:1e00:8202:42:15ff:fee6:1008")
	if !redirect.TargetAddress().Equal(targetIP) ||
		!redirect.DstAddress().Equal(dstIP) ||
		!bytes.Equal(redirect.TargetLinkLayerAddr(), targetMAC) {
		t.Fatal("invalid fields ", redirect)
	}

	_, _, err := tc.h.ProcessPacket(nil, ether, ip6Frame.Payload())
	if err != nil {
		t.Fatal(err)
	}

}
